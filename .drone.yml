kind: pipeline # 定义对象类型，还有secret和signature两种类型
type: docker # 定义流水线类型，还有kubernetes、exec、ssh等类型
name: drone-test-springboot

## 执行系统平台，不然在build会一直pending
## 预设是 linux / amd64
platform:
  os: linux
  arch: arm64

## 克隆代码时，depth=1只获取最后一次提交，速度更快
clone:
  disable: true
  #depth: 1

steps:
  - name: my-clone
    image: drone/git
    commands:
     - git clone git@github.com:qaqRose/drone-test-springboot.git --depth=1

  - name: build # 流水线名称
    image: maven:3.8.5-openjdk-11
    commands:
      - mvn clean package -DskipTests=true
      - cp target/springboot-drone-test-0.0.1-SNAPSHOT.jar /app/app.jar
      - cp Dockerfile /app

  - name: build-docker
    image: plugins/docker
    volumes: # 将容器内目录挂载到宿主机，仓库需要开启Trusted设置
      - name: docker
        path: /var/run/docker.sock # 挂载宿主机的docker
    settings:
      context: /drone/src
    commands: # 定义在Docker容器中执行的shell命令
      # 第一次执行注释 stop 跟 remove
      # - echo stop container
      # - docker stop `docker ps -a | grep drone-test-springboot | awk '{print $1}'`
      # - echo remove image
      # - docker rm -f `docker ps -a | grep drone-test-springboot | awk '{print $1}'`
      - echo build new images
      - docker build -t drone-test-springboot .
      - echo run container
      - docker run -p 8080:8080 --name drone-test-springboot -d drone-test-springboot

# 定义流水线挂载目录
volumes:
  - name: docker
    host:
      path: /var/run/docker.sock
