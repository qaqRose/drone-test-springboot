kind: pipeline # 定义对象类型，还有secret和signature两种类型
type: docker # 定义流水线类型，还有kubernetes、exec、ssh等类型
name: drone-test-springboot

## 执行系统平台，不然在build会一直pending
## 预设是 linux / amd64
platform:
  os: linux
  arch: arm64

## 自定义clone流程，这里手动关闭掉
clone:
  disable: true
  #depth: 1

steps:
  - name: my-clone
    image: drone/git
    commands:
      ## 使用http1 (不知道为什么一直报错)
      - git config --global http.version HTTP/1.1
      - git clone https://github.com/qaqRose/drone-test-springboot.git --depth=1 .

  - name: build # 流水线名称
    image: maven:3.8.5-openjdk-17
    volumes:
      - name: maven-repository
        path: /root/.m2   # 将maven下载依赖的目录挂载出来，复用jar和修改配置
    commands:
      - mvn clean package -DskipTests=true
      - cp target/springboot-drone-test-0.0.1-SNAPSHOT.jar app.jar

  - name: build-docker
    image: plugins/docker
    volumes: # 将容器内目录挂载到宿主机，仓库需要开启Trusted设置
      - name: docker
        path: /var/run/docker.sock # 挂载宿主机的docker
    settings:
      context: /drone/src
    commands: # 定义在Docker容器中执行的shell命令
      # 第一次执行注释 stop 跟 remove
      # - echo stop container
      # - docker stop `docker ps -a | grep drone-test-springboot | awk '{print $1}'`
      # - echo remove image
      # - docker rm -f `docker ps -a | grep drone-test-springboot | awk '{print $1}'`
      - echo build new images
      - docker build -t drone-test-springboot .
      - echo run container
      - docker run -p 8080:8080 --name drone-test-springboot -d drone-test-springboot

# 定义流水线挂载目录
volumes:
  - name: docker
    host:
      path: /var/run/docker.sock
  - name: maven-repository
    host:
      path: /data/.m2
